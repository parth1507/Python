class Node:
    def __init__(self,data):
        self.data=data
        self.next=None

class Linkedlist:
    def __init__(self):
        self.head=None
    
    def insertAtBegining(self,new_data):
        new_node=Node(new_data)
        
        if self.head is None:
            self.head=new_node
            return
        else:
            new_node.next=self.head
            self.head=new_node
    
    def insertAtEnd(self,new_data):
        new_node=Node(new_data)
        
        if self.head is None:
            self.head=new_node
            return
        
        last=self.head
        while last.next:
            last=last.next
        last.next=new_node    
    
    def insertAtPosition(self,new_data,position):
        if position==1:
            self.insertAtBegining(new_data)
        
        pos=1
        temp=self.head
        
        while temp!=None and pos+1!=position:
            pos=pos+1
            temp=temp.next
        
        if temp!=None:
            new_node=Node(new_data)
            new_node.next=temp.next
            temp.next=new_node
        
        else:
            print("Index not present")
    
    def deleteFromStart(self):
        if self.head==None:
            return
        
        self.head=self.head.next
    
    def deleteFromEnd(self):
        if self.head==None:
            return
        
        if self.head.next==None:
            self.head=None
            return
        
        temp=self.head
        while temp.next.next!=None:
            temp=temp.next
        
        temp.next=None   
    
    def deleteFromPosition(self,position):
        if self.head==None:
            print("List is empty")
        
        if position==1:
            head=head.next
        
        else:
            pos=1
            temp=self.head
            
            while temp!=None and pos+1!=position:
                temp=temp.next
                pos=pos+1
            
            if temp!=None:
                temp.next=temp.next.next
            else:
                print("Index not present")
                
    
    def printLL(self):
        temp=self.head
        
        while temp:
            print(temp.data)
            temp=temp.next
    
    def lengthLL(self):
        size=0
        temp=self.head
        
        while temp:
            size=size+1
            temp=temp.next
        return size    
    

if __name__=='__main__':
    ll=Linkedlist()
    
    ll.insertAtBegining(2)
    ll.insertAtBegining(3)
    ll.insertAtBegining(4)
    
    #ll.printLL()
    
    ll.insertAtEnd(9)
    #ll.printLL()
    ll.insertAtEnd(6)
    ll.insertAtPosition(8,3)
    
    # ll.deleteFromEnd()
    #ll.deleteFromPosition(8)
    length=ll.lengthLL()
    # ll.deleteFromStart()
    # ll.deleteFromStart()
    
    ll.printLL()
    print(length)
